<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m7.abs.admin.mapper.FlashSmTemplateMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.m7.abs.common.domain.entity.FlashSmTemplateEntity">
    <result column="id" property="id" />
        <result column="display_name" property="displayName" />
        <result column="channel_id" property="channelId" />
        <result column="account_id" property="accountId" />
        <result column="content" property="content" />
        <result column="type" property="type" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="last_update_time" property="lastUpdateTime" />
        <result column="template_number" property="templateNumber" />
        <result column="deleted" property="deleted" />
        <result column="reason" property="reason" />
        <result column="params" property="params" />
        <result column="scene_description" property="sceneDescription" />
        <result column="last_update_by" property="lastUpdateBy" />
        <result column="create_by" property="createBy" />
        <result column="channel_template_id" property="channelTemplateId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        display_name, channel_id, account_id, content, type, status, create_time, last_update_time, template_number, deleted, reason, params, scene_description, last_update_by, create_by, channel_template_id
    </sql>


    <select id="findFlashSmTemplateByPage" resultType="com.m7.abs.admin.domain.dto.FlashSmTemplatePageDTO">
        SELECT
        sms_temp.*,
        channel."name" AS channelName,
        account."name" AS accountName
        FROM
        flash_sm_template sms_temp
        LEFT JOIN channel AS channel ON channel.ID = sms_temp.channel_id	AND channel.deleted = 0
        LEFT JOIN account AS account ON account.ID = sms_temp.account_id 	AND account.deleted = 0
        <where>
            sms_temp.deleted = 0
            <if test="ew.emptyOfWhere == false">
                AND ${ew.sqlSegment}
            </if>
        </where>
        ORDER BY
        sms_temp.create_time DESC
    </select>

</mapper>
